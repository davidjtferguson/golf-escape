pico-8 cartridge // http://www.pico-8.com
version 29
__lua__


function _init()
 --constants
 pixel=0.125
 
 coloffset=0.001
 
 gravity=0.009
 
 -- vars
 
 av={
  x=4,
  y=4,
  
  xvel=0,
  yvel=0,
  
  colstate="air",
  
  w=pixel*8,
  h=pixel*8,
 }
 
 updatehitboxes()
 
 resetswing()

 xmap,ymap=0,0
 
 bg=3
 
 currentupdate=updateplaying
 
end

function resetswing()
 swing={
  xvec=0,
  yvec=-1,
  
  --consts
  lowf=0.2,
  highf=1,
  rotangle=1/24,
  btnf=0.1,
  decay=0.002,
 }
 
 swing.force=swing.lowf
end

function _update60()
 currentupdate()
end

function updateplaying()

 updatecamera()

 -- collisions
 updatehitboxes()
 
 if mapcol(av.bottom,0,av.yvel,0) then
  moveavtoground()
  av.xvel=0
  av.yvel=0
  av.colstate="ground"
 else
  av.yvel+=gravity
  
  av.colstate="air"
 end
 
 if mapcol(av.top,0,av.yvel,0) then
  moveavtoroof()
  av.yvel*=-1
 end
 
 if mapcol(av.left,av.xvel,0,0) then
  moveavtoleft()
  av.xvel*=-1
 end
 
 if mapcol(av.right,av.xvel,0,0) then
  moveavtoright()
  av.xvel*=-1
 end
 
 -- av update
 av.x=av.x+av.xvel
 av.y=av.y+av.yvel

 -- swing controls
 if btnp(⬅️) then
  swing.xvec,swing.yvec=rotatevec(swing.xvec,swing.yvec,swing.rotangle)
 end

 if btnp(➡️) then
  swing.xvec,swing.yvec=rotatevec(swing.xvec,swing.yvec,-swing.rotangle)
 end

 if btnp(❎) then
  swing.force+=swing.btnf
  
  if swing.force>swing.highf then
   swing.force=swing.highf
  end
 end
 
 if swing.force>swing.lowf then
  swing.force-=swing.decay
 end
 
 if swing.force<swing.lowf then
  swing.force=swing.lowf
 end
 
 if btnp(🅾️) and av.colstate=="ground" then
  av.xvel=swing.xvec*swing.force
  av.yvel=swing.yvec*swing.force
  
  resetswing()
 end
 
end

function rotatevec(x,y,angle)
 local newx=x*cos(angle)-y*sin(angle)
 local newy=x*sin(angle)+y*cos(angle)
 
 return newx,newy
end


function updatecamera()
 --screen by screen
 -- don't allow camera off map
 if av.x>0 and av.x<127 then
  xmap=flr((av.x+av.w*0.5)/16)
 end
 
 if av.y>0 and av.y<63 then
 --todo: do something like this?
  --boost if moving up a screen
--  local ytempmap=flr((av.y+av.h*0.5)/16)
--  if ytempmap<ymap then
--   av.yvel=-av.yjumpforce
--  end
  
--  ymap=ytempmap

  ymap=flr((av.y+av.h*0.5)/16)
 end

 camera(xmap*128,ymap*128) 
end


function _draw()
 cls(bg)

 map(xmap*16,ymap*16,xmap*128,ymap*128,16,16)
 
 spr(2,av.x*8,av.y*8)
 
 line(av.x*8,av.y*8,
  av.x*8+(swing.xvec*8*swing.force*3),
  av.y*8+(swing.yvec*8*swing.force*3),
  9)
  
  
 print(xmap,1,0,0)
 print(ymap,1,7,0)
 
end
-->8
--collision

function updatehitboxes()
 --smaller than av
 av.hurtbox=makebox(1,2,5,3)
 
 local off=coloffset*9
 
 --cover top and bottom
 av.bottom=makebox(
  1,7,
  6,1,
  0,coloffset)
 
 av.top=makebox(
  1,1,
  6,1,
  0,coloffset)
 
 --space between top and bottom
 av.left=makebox(
  1,2,
  1,5,
  coloffset)
 
 av.right=makebox(6,2,1,5)
end

function makebox(x,y,w,h,xo,wo)
 return {
 	x=av.x+av.w*pixel*x-(xo or 0),
 	y=av.y+av.h*pixel*y,
 	w=av.w*pixel*w-(wo or 0),
 	h=av.h*pixel*h
 }
end


function moveavtoground()
 av.y+=av.yvel
 av.y-=av.y%pixel
 updatehitboxes()
 av.y+=distanceinwall(av.bottom,0,1,-1)+pixel
 updatehitboxes()
end

function moveavtoroof()
 av.y+=distancetowall(av.top,0,1,-1)
 av.y+=pixel-av.y%pixel
end

function moveavtoleft()
 --unsure why offset needed :(
 av.left.x+=coloffset 
 av.x+=distancetowall(av.left,1,0,-1)
 av.left.x-=coloffset
 av.x+=pixel-av.x%pixel
end

function moveavtoright()
 av.x+=distancetowall(av.right,1,0,1)
 av.x-=av.x%pixel
end

function distancetowall(box,checkx,checky,direction)
 local distancetowall=0

 while not mapcol(box,distancetowall*checkx,distancetowall*checky,0) do
  distancetowall+=(pixel*direction)
 end

 return distancetowall
end

function distanceinwall(box,checkx,checky,direction)
 local distanceinwall=0

 while mapcol
 (box,distanceinwall*checkx,
      distanceinwall*checky,0) do
  distanceinwall+=(pixel*direction)
 end

 return distanceinwall
end

--all sides collision(flag)
function allboxcol(f)
 if mapcol(av.top,0,0,f) and
    mapcol(av.bottom,0,0,f) and
    mapcol(av.left,0,0,f) and
    mapcol(av.right,0,0,f) then
  return true
 end
 return false
end

function anyboxcol(xvel,yvel,flag)
 if mapcol(av.top,xvel,yvel,flag) or
    mapcol(av.bottom,xvel,yvel,flag) or
    mapcol(av.left,xvel,yvel,flag) or
    mapcol(av.right,xvel,yvel,flag) then
  return true
 end
 return false
end


--mapcollision
function mapcol(box,xvel,yvel,flag)
 return checkflagarea(box.x+xvel,box.y+yvel,box.w,box.h,flag)
end

function checkflagarea(x,y,w,h,flag)
 return
  checkflag(x,y,flag) or
  checkflag(x+w,y,flag) or
  checkflag(x,y+h,flag) or
  checkflag(x+w,y+h,flag)
end

function checkflag(x,y,flag)
 local s=mget(x,y)
 return fget(s,flag)
end

__gfx__
00000000888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008bbbbbb80055550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007008bbbbbb80555655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770008bbbbbb80555565000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770008bbbbbb80555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007008bbbbbb80565555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008bbbbbb80556555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888880055550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ff4ff48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8ff98668000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00900900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101100101010101100101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001001000001010000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000001000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000020000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000101000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100002000000000000000200000000101000000010100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000101000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010100000001010101100101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010100000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001010000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
